# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
# The edited file had a syntax error: error converting YAML to JSON: yaml: line 5: did not find expected <document start>
#
apiVersion: v1
kind: Template
labels:
  group: infrastructure
  version: 5.2.1-1
metadata:
  annotations:
    description: Creates the infrastructure for the end-to-end content and security
      management story.
    tags: instant-app,artifactory
    version: 5.2.1-1
  creationTimestamp: 2018-03-02T16:54:59Z
  name: artifactory
  namespace: artifactory
  resourceVersion: "3176995"
  selfLink: /oapi/v1/namespaces/artifactory/templates/artifactory
  uid: 71aab769-1e3a-11e8-86a8-52540042f33c
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: artifactory
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.bintray.io/jfrog/artifactory-pro:5.2.1
      importPolicy: {}
      name: 5.2.1
    - from:
        kind: ImageStreamTag
        name: ${ARTIFACTORY_VERSION}
      name: latest
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels: null
    name: artifactory-postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_CAPACITY}
    selector:
      matchLabels:
        type: postgres
- apiVersion: v1
  kind: Route
  metadata:
    name: artifactory
  spec:
    to:
      kind: Service
      name: artifactory
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app: artifactory
      service.alpha.openshift.io/dependencies: '[{"name":"${DATABASE_SERVICE_NAME}","namespace":"","kind":"Service"}]'
      service.alpha.openshift.io/serving-cert-secret-name: artifactory
      service.openshift.io/infrastructure: "true"
    name: artifactory
  spec:
    ports:
    - name: artifactory
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: postgresql-94-rhel7
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgresql-94-rhel7
    name: artifactory-postgresql
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgresql-94-rhel7
      deploymentconfig: artifactory-postgresql
  status:
    loadBalancer: {}
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      app: artifactory
    name: artifactory
  spec:
    replicas: 1
    serviceName: artifactory
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: artifactory
          deploymentconfig: artifactory
      spec:
        containers:
        - env:
          - name: DB_USER
            value: ${DATABASE_USER}
          - name: DB_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: DB_HOST
            value: ${DATABASE_SERVICE_NAME}
          - name: DB_TYPE
            value: postgresql
          image: docker.bintray.io/jfrog/artifactory-pro:5.2.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 130
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: artifactory
          ports:
          - containerPort: 8081
            protocol: TCP
          resources:
            limits:
              cpu: 512m
              memory: 768Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/opt/jfrog/artifactory
            name: artifactory-data
          - mountPath: /etc/opt/jfrog/certs/
            name: generated-certificate-volume
            readOnly: true
          - mountPath: /etc/config
            name: artifactory-etc
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: artifactory
        serviceAccountName: artifactory
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            name: artifactory-default-config
          name: artifactory-etc
        - name: artifactory-data
          persistentVolumeClaim:
            claimName: artifactory-data
        - name: artifactory-logs
          persistentVolumeClaim:
            claimName: artifactory-logs
        - name: artifactory-backup
          persistentVolumeClaim:
            claimName: artifactory-backup
        - name: artifactory-var
          persistentVolumeClaim:
            claimName: artifactory-var
        - name: generated-certificate-volume
          secret:
            secretName: artifactory
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - artifactory
        from:
          kind: ImageStreamTag
          name: artifactory:a5.2.1
        lastTriggeredImage: ""
      type: ImageChange
    volumeClaimTemplates:
    - metadata:
        annotations:
          app: artifactory
        name: artifactory-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            type: data
    - metadata:
        annotations:
          app: artifactory
        name: artifactory-logs
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            type: logs
    - metadata:
        annotations:
          app: artifactory
        name: artifactory-backup
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            type: backup
    - metadata:
        annotations:
          app: artifactory
        name: artifactory-var
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            type: var
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: postgresql-94-rhel7
    name: artifactory-postgresql
  spec:
    replicas: 1
    selector:
      app: postgresql-94-rhel7
      deploymentconfig: artifactory-postgresql
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: postgresql-94-rhel7
          deploymentconfig: artifactory-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: artifactory
          - name: POSTGRESQL_PASSWORD
            value: artifactory
          - name: POSTGRESQL_USER
            value: artifactory
          image: registry.access.redhat.com/rhscl/postgresql-94-rhel7
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-94-rhel7
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U artifactory -q -d artifactory -c "SELECT 1"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: artifactory-postgresql
        volumes:
        - name: artifactory-postgresql
          persistentVolumeClaim:
            claimName: artifactory-postgresql
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql-94-rhel7
        from:
          kind: ImageStreamTag
          name: postgresql-94-rhel7:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
parameters:
- description: Maximum amount of memory the PostgreSQL container can use.
  displayName: Memory Limit (PostgreSQL)
  name: MEMORY_POSTGRESQL_LIMIT
  required: true
  value: 512Mi
- displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  value: artifactory-postgresql
- displayName: Database Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: DATABASE_USER
  value: artifactory
- displayName: Database Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DATABASE_PASSWORD
  value: artifactory
- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: artifactory
- displayName: Maximum Database Connections
  name: POSTGRESQL_MAX_CONNECTIONS
  value: "100"
- displayName: Shared Buffer Amount
  name: POSTGRESQL_SHARED_BUFFERS
  value: 12MB
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: POSTGRESQL_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Version of the Artifactory container image to be used
  displayName: Artifactory Version
  name: ARTIFACTORY_VERSION
  required: true
  value: 5.2.1
